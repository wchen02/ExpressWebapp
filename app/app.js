// Generated by CoffeeScript 1.6.1
  var app, bulkloader, config, db, express, http, mongoose, path;

  express = require('express');

  http = require('http');

  path = require('path');

  mongoose = require('mongoose');

  config = require('config');

  bulkloader = require('bulk-loader');

  db = null;

  app = express();

  app.configure(function() {
    app.set('port', process.env.PORT || 3000);
    app.set('views', __dirname + '/views');
    app.set('view engine', 'jade');
    app.use(express.favicon());
    app.use(express.logger('dev'));
    app.use(express.cookieParser());
    app.use(express.session({
      secret: 'zee grumpy cat!'
    }));
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    return app.use(express['static'](path.join(__dirname, 'public')));
  });

  app.configure("development", function() {
    var connection;
    app.use(express.errorHandler());
    console.log('Connecting to MongoDB: ' + config.db.host + ':' + config.db.port + '/' + config.db.dbname);
    db = mongoose.connect('mongodb://' + config.db.user + ':' + config.db.password + '@' + config.db.host + ':' + config.db.port + '/' + config.db.dbname);
    connection = mongoose.connection;
    connection.on('error', console.error.bind(console, 'connection error:'));
    return connection.once('open', function() {
      console.log('Connection to MongoDb has successfully been established.');
    });
  });

  bulkloader.load('bootstrap', /\.coffee$/, function(err, file, filename) {
    if (err) {
      console.log('Error loading ' + filename);
    } else {
      console.log('Loaded ' + filename);
      file.init(app);
    }
  });

  bulkloader.load('models', /Model\.coffee$/, function(err, file, filename) {
    if (err) {
      console.log('Error loading ' + filename);
    } else {
      console.log('Loaded ' + filename);
    }
  });

  // http.createServer(app).listen(app.get('port'), function() {
    // return console.log('Express server listening on port ' + app.get('port'));
  // });

    module.exports = http.createServer(app);
    module.exports.express = app;
    module.exports.use = function() {
      app.use.apply(app, arguments);
    };
